---

# todo: hostname not resolved
# todo: /etc/apt/source.list => https

# NOTE: if this task is stuck while executing => your target host might not have internet access (firewall/name resolution)
- name: Bootstrap | Install base packages
  ansible.builtin.apt:
    name: "{{ BOOTY_HC.base_packages.debian[ansible_distribution_major_version] | default(BOOTY_HC.base_packages.debian.other) }}"
    state: present
    update_cache: yes

- name: Bootstrap | Install tools
  ansible.builtin.apt:
    name: "{{ BOOTSTRAP.tools.debian[ansible_distribution_major_version] | default(BOOTSTRAP.tools.debian.other) }}"
    state: present
  when: BOOTSTRAP.install_tools

- name: Bootstrap | Install VMWare guest-tools
  ansible.builtin.apt:
    name: "{{ BOOTY_HC.vm_packages.vmware.debian[ansible_distribution_major_version] | default(BOOTY_HC.vm_packages.vmware.debian.other) }}"
    state: present
  when:
    - ansible_virtualization_role is defined
    - ansible_virtualization_role|lower == 'guest'
    - ansible_virtualization_type|lower == 'vmware'

- name: Bootstrap | Install KVM guest-tools
  ansible.builtin.apt:
    name: "{{ BOOTY_HC.vm_packages.kvm.debian[ansible_distribution_major_version] | default(BOOTY_HC.vm_packages.kvm.debian.other) }}"
    state: present
  when:
    - ansible_virtualization_role is defined
    - ansible_virtualization_role|lower == 'guest'
    - ansible_virtualization_type|lower == 'kvm'

- name: Bootstrap | Set localhost name resolution
  ansible.builtin.lineinfile:
    dest: '/etc/hosts'
    regexp: '^127.0.1.1'
    line: "127.0.1.1 {{ inventory_hostname }}
    {% if BOOTSTRAP.hostname is defined %}{{ BOOTSTRAP.hostname }}{% endif %}
    {% if BOOTSTRAP.host_fqdn is defined %}{{ BOOTSTRAP.host_fqdn }}{% endif %}
    {% if host_fqdn is defined %}{{ host_fqdn }}{% endif %}"
    state: present
    backrefs: yes

- name: Bootstrap | AutoUpdate config
  ansible.builtin.import_tasks: update.yml
  when: BOOTSTRAP.auto_update.enable
  tags: update

- name: Bootstrap | AutoUpdate | Disabling auto-update services
  ansible.builtin.systemd:
    daemon_reload: yes
    name: "{{ item }}"
    state: stopped
    enabled: no
  changed_when: false
  loop:
    - 'apt-daily-upgrade.timer'
    - 'apt-daily.timer'
  when: not BOOTSTRAP.auto_update.enable
